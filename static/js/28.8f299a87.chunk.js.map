{"version":3,"sources":["components/HeaderBreadcrumbs.js","components/VIH/IntrantForm.js","pages/VIH/Intrant.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","IntrantForm","intrantsName","useSelector","state","VIHCollecte","useState","valIntrant","setValIntrant","setValYear","valMois","setValMois","dispatch","useDispatch","enqueueSnackbar","useSnackbar","Schema","useAuth","user","Yup","shape","mois","required","intrant","nombre","year","formik","useFormik","enableReinitialize","initialValues","validationSchema","onSubmit","values","a","setSubmitting","setErrors","dataSubmit","id","submit","resetAllForm","console","error","createIntrant","resetForm","touched","errors","handleSubmit","setFieldValue","isSubmitting","getFieldProps","useEffect","getIntrantName","value","noValidate","autoComplete","Stack","direction","spacing","Autocomplete","disablePortal","name","options","onChange","e","newValue","inputValue","onInputChange","event","newInputValue","renderInput","params","TextField","label","type","Boolean","helperText","LoadingButton","color","loading","onClick","Button","Intrant","themeStretch","useSettings","Page","title","Container","maxWidth","PATH_DASHBOARD","VIH","dashboard","collecte","Grid","container","item","xs","md"],"mappings":"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","file":"static/js/28.8f299a87.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import * as Yup from \"yup\";\nimport { useSnackbar } from \"notistack5\";\nimport { useState, useEffect } from \"react\";\nimport { Form, FormikProvider, useFormik } from \"formik\";\n// material\nimport { LoadingButton } from \"@material-ui/lab\";\nimport { Stack, TextField, Autocomplete, Button } from \"@mui/material\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// utils\nimport { getIntrantName, createIntrant } from \"../../redux/slices/collecteVIH\";\nimport useAuth from \"../../hooks/useAuth\";\n\n// ----------------------------------------------------------------------\n\nexport default function IntrantForm() {\n\tconst intrantsName = useSelector((state) => state.VIHCollecte.intrantsName);\n\n\tconst [valIntrant, setValIntrant] = useState(\"\");\n\tconst [valYear, setValYear] = useState(\"\");\n\tconst [valMois, setValMois] = useState(0);\n\tconst dispatch = useDispatch();\n\n\tconst { enqueueSnackbar } = useSnackbar();\n\tconst { user } = useAuth();\n\n\tconst Schema = Yup.object().shape({\n\t\tmois: Yup.string().required(\"Entrer le mois de saisie\"),\n\t\tintrant: Yup.string().required(\"Nom de l'intrant\"),\n\t\tnombre: Yup.number().required(\"Nombre d'intrant requis\"),\n\t\tyear: Yup.number().required(\"Année requis\"),\n\t});\n\tconst formik = useFormik({\n\t\tenableReinitialize: true,\n\t\tinitialValues: {\n\t\t\tmois: \"\",\n\t\t\tintrant: \"\",\n\t\t\tnombre: \"\",\n\t\t\tyear: null,\n\t\t},\n\t\tvalidationSchema: Schema,\n\t\tonSubmit: async (values, { setSubmitting, setErrors }) => {\n\t\t\tconst dataSubmit = {\n\t\t\t\tintrant: valIntrant.id,\n\t\t\t\tnombre: values.nombre,\n\t\t\t\tmois: valMois,\n\t\t\t\tyear: values.year,\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tawait submit(dataSubmit);\n\t\t\t\tawait resetAllForm();\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t\tsetSubmitting(false);\n\t\t\t\tsetErrors(error);\n\t\t\t}\n\t\t},\n\t});\n\n\tconst submit = (values) => {\n\t\tdispatch(createIntrant(values));\n\t\tenqueueSnackbar(\"Enregistrement effectué\", { variant: \"success\" });\n\t};\n\n\tconst resetAllForm = () => {\n\t\tsetValIntrant(\"\");\n\t\tresetForm();\n\t};\n\n\tconst {\n\t\tvalues,\n\t\ttouched,\n\t\terrors,\n\t\thandleSubmit,\n\t\tresetForm,\n\t\tsetFieldValue,\n\t\tisSubmitting,\n\t\tgetFieldProps,\n\t} = formik;\n\n\t// Data\n\tconst mois = [\n\t\t{ label: \"Janvier\", value: 1 },\n\t\t{ label: \"Fevrier\", value: 2 },\n\t\t{ label: \"Mars\", value: 3 },\n\t\t{\n\t\t\tlabel: \"Avril\",\n\t\t\tvalue: 4,\n\t\t},\n\t\t{ label: \"Mai\", value: 5 },\n\t\t{ label: \"Juin\", value: 6 },\n\t\t{ label: \"Juillet\", value: 7 },\n\t\t{ label: \"Aout\", value: 8 },\n\t\t{ label: \"Septembre\", value: 9 },\n\t\t{ label: \"Octobre\", value: 10 },\n\t\t{ label: \"Novembre  \", value: 11 },\n\t\t{ label: \"Decembre\", value: 12 },\n\t];\n\tconst years = [{ label: \"2022\" }, { label: \"2023\" }, { label: \"2024\" }];\n\n\tuseEffect(() => {\n\t\tdispatch(getIntrantName());\n\t}, []);\n\n\treturn (\n\t\t<FormikProvider value={formik}>\n\t\t\t<Form noValidate autoComplete=\"on\" onSubmit={handleSubmit}>\n\t\t\t\t<Stack direction=\"column\" spacing={3} sx={{ mt: 3 }}>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tdisablePortal\n\t\t\t\t\t\tid=\"intrant\"\n\t\t\t\t\t\tname=\"intrant\"\n\t\t\t\t\t\toptions={intrantsName}\n\t\t\t\t\t\tvalue={valIntrant}\n\t\t\t\t\t\tonChange={(e, newValue) => setValIntrant(newValue)}\n\t\t\t\t\t\tinputValue={values.valIntrant}\n\t\t\t\t\t\tonInputChange={(event, newInputValue) =>\n\t\t\t\t\t\t\tsetFieldValue(\"intrant\", newInputValue)\n\t\t\t\t\t\t}\n\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t<TextField {...params} label=\"Intrant\" variant=\"standard\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tlabel=\"Nombre\"\n\t\t\t\t\t\tvariant=\"standard\"\n\t\t\t\t\t\tname=\"nombre\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t{...getFieldProps(\"nombre\")}\n\t\t\t\t\t\terror={Boolean(touched.nombre && errors.nombre)}\n\t\t\t\t\t\thelperText={touched.nombre && errors.nombre}\n\t\t\t\t\t/>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tdisablePortal\n\t\t\t\t\t\tid=\"mois\"\n\t\t\t\t\t\tname=\"mois\"\n\t\t\t\t\t\toptions={mois}\n\t\t\t\t\t\tvalue={values.mois}\n\t\t\t\t\t\tonChange={(e, newValue) => setValMois(newValue.value)}\n\t\t\t\t\t\tinputValue={values.mois}\n\t\t\t\t\t\tonInputChange={(event, newInputValue) =>\n\t\t\t\t\t\t\tsetFieldValue(\"mois\", newInputValue)\n\t\t\t\t\t\t}\n\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t<TextField {...params} label=\"Mois\" variant=\"standard\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tdisablePortal\n\t\t\t\t\t\tid=\"year\"\n\t\t\t\t\t\tname=\"year\"\n\t\t\t\t\t\toptions={years}\n\t\t\t\t\t\tvalue={values.year}\n\t\t\t\t\t\tonChange={(e, newValue) => setValYear(newValue)}\n\t\t\t\t\t\tinputValue={values.year}\n\t\t\t\t\t\tonInputChange={(event, newInputValue) =>\n\t\t\t\t\t\t\tsetFieldValue(\"year\", newInputValue)\n\t\t\t\t\t\t}\n\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tlabel=\"Année\"\n\t\t\t\t\t\t\t\tvariant=\"standard\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Stack direction=\"row\" spacing={2}>\n\t\t\t\t\t\t<LoadingButton\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEnregistrer\n\t\t\t\t\t\t</LoadingButton>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={() => resetAllForm()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAnnuler\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Stack>\n\t\t\t</Form>\n\t\t</FormikProvider>\n\t);\n}\n","import { useEffect } from \"react\";\nimport { paramCase } from \"change-case\";\nimport { useParams, useLocation } from \"react-router-dom\";\n// material\nimport { Container, Grid } from \"@material-ui/core\";\n// redux\nimport { useDispatch, useSelector } from \"../../redux/store\";\n\n// routes\nimport { PATH_DASHBOARD } from \"../../routes/paths\";\n// hooks\nimport useSettings from \"../../hooks/useSettings\";\n// components\nimport Page from \"../../components/Page\";\nimport HeaderBreadcrumbs from \"../../components/HeaderBreadcrumbs\";\nimport IntrantForm from \"../../components/VIH/IntrantForm\";\n\n// ----------------------------------------------------------------------\n\nexport default function Intrant() {\n\tconst { themeStretch } = useSettings();\n\n\treturn (\n\t\t<Page title=\"Intrant | e-zaho VIH\">\n\t\t\t<Container maxWidth={themeStretch ? false : \"lg\"}>\n\t\t\t\t<HeaderBreadcrumbs\n\t\t\t\t\theading={\"Enregistrement des intrants\"}\n\t\t\t\t\tlinks={[\n\t\t\t\t\t\t{ name: \"Dashboard\", href: PATH_DASHBOARD.VIH.dashboard },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"Intrant\",\n\t\t\t\t\t\t\thref: PATH_DASHBOARD.VIH.collecte,\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t/>\n\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={4} md={4}>\n\t\t\t\t\t\t<IntrantForm />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t</Page>\n\t);\n}\n"],"sourceRoot":""}