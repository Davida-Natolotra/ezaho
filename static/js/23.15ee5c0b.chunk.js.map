{"version":3,"sources":["components/HeaderBreadcrumbs.js","components/SearchNotFound.js","components/_dashboard/user/list/UserListHead.js","components/_dashboard/user/list/UserListToolbar.js","components/_dashboard/user/list/UserMoreMenu.js","pages/dashboard/UserList.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","SearchNotFound","searchQuery","align","UserListHead","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","headCell","alignRight","sortDirection","id","TableSortLabel","hideSortIcon","active","direction","onClick","property","event","label","Box","visuallyHidden","RootStyle","styled","Toolbar","height","justifyContent","theme","spacing","SearchStyle","OutlinedInput","width","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","palette","grey","UserListToolbar","filterName","onFilterName","isLight","useTheme","mode","color","bgcolor","Typography","component","value","placeholder","startAdornment","InputAdornment","position","Icon","icon","searchFill","Tooltip","title","IconButton","trash2Fill","roundFilterList","UserMoreMenu","onDelete","userName","ref","useRef","useState","isOpen","setIsOpen","moreVerticalFill","Menu","open","anchorEl","current","onClose","PaperProps","maxWidth","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","ListItemIcon","trash2Outline","ListItemText","primary","primaryTypographyProps","RouterLink","to","PATH_DASHBOARD","user","root","paramCase","editFill","TABLE_HEAD","descendingComparator","a","b","UserList","themeStretch","useSettings","dispatch","useDispatch","userList","useSelector","state","page","setPage","setOrder","selected","setSelected","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","useEffect","getUserList","emptyRows","Math","max","length","filteredUsers","array","comparator","query","stabilizedThis","el","index","sort","filter","_user","name","toLowerCase","indexOf","applySortFilter","getComparator","isUserNotFound","Page","Container","Button","newUser","startIcon","plusFill","Card","Scrollbar","TableContainer","minWidth","Table","newSelecteds","n","TableBody","slice","row","role","status","company","avatarUrl","isVerified","isItemSelected","hover","tabIndex","selectedIndex","newSelected","concat","handleClick","scope","Stack","Avatar","alt","src","Label","sentenceCase","userId","deleteUser","style","colSpan","py","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/23.15ee5c0b.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { Paper, Typography } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nSearchNotFound.propTypes = {\n  searchQuery: PropTypes.string\n};\n\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\n  return (\n    <Paper {...other}>\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\n        Not found\n      </Typography>\n      <Typography variant=\"body2\" align=\"center\">\n        No results found for &nbsp;\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or using complete words.\n      </Typography>\n    </Paper>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@material-ui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nUserListHead.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  headLabel: PropTypes.array,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  onSelectAllClick: PropTypes.func\n};\n\nexport default function UserListHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n          />\n        </TableCell>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.alignRight ? 'right' : 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\nimport { useTheme, styled } from '@material-ui/core/styles';\nimport { Box, Toolbar, Tooltip, IconButton, Typography, OutlinedInput, InputAdornment } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nUserListToolbar.propTypes = {\n  numSelected: PropTypes.number,\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func\n};\n\nexport default function UserListToolbar({ numSelected, filterName, onFilterName }) {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: isLight ? 'primary.main' : 'text.primary',\n          bgcolor: isLight ? 'primary.lighter' : 'primary.dark'\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography component=\"div\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <SearchStyle\n          value={filterName}\n          onChange={onFilterName}\n          placeholder=\"Search user...\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          }\n        />\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <Icon icon={trash2Fill} />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <Icon icon={roundFilterList} />\n          </IconButton>\n        </Tooltip>\n      )}\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { paramCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@material-ui/core';\n// routes\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\n\n// ----------------------------------------------------------------------\n\nUserMoreMenu.propTypes = {\n  onDelete: PropTypes.func,\n  userName: PropTypes.string\n};\n\nexport default function UserMoreMenu({ onDelete, userName }) {\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem onClick={onDelete} sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={trash2Outline} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n\n        <MenuItem\n          component={RouterLink}\n          to={`${PATH_DASHBOARD.user.root}/${paramCase(userName)}/edit`}\n          sx={{ color: 'text.secondary' }}\n        >\n          <ListItemIcon>\n            <Icon icon={editFill} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Edit\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@material-ui/core';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getUserList, deleteUser } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/list';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', alignRight: false },\n  { id: 'company', label: 'Company', alignRight: false },\n  { id: 'role', label: 'Role', alignRight: false },\n  { id: 'isVerified', label: 'Verified', alignRight: false },\n  { id: 'status', label: 'Status', alignRight: false },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function UserList() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { userList } = useSelector((state) => state.user);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(getUserList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = userList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeleteUser = (userId) => {\n    dispatch(deleteUser(userId));\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\n\n  const filteredUsers = applySortFilter(userList, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  return (\n    <Page title=\"User: List | Minimal-UI\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"User List\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.root },\n            { name: 'List' }\n          ]}\n          action={\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              to={PATH_DASHBOARD.user.newUser}\n              startIcon={<Icon icon={plusFill} />}\n            >\n              New User\n            </Button>\n          }\n        />\n\n        <Card>\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <UserListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={userList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const { id, name, role, status, company, avatarUrl, isVerified } = row;\n                    const isItemSelected = selected.indexOf(name) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, name)} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            <Avatar alt={name} src={avatarUrl} />\n                            <Typography variant=\"subtitle2\" noWrap>\n                              {name}\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\">{company}</TableCell>\n                        <TableCell align=\"left\">{role}</TableCell>\n                        <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell>\n                        <TableCell align=\"left\">\n                          <Label\n                            variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                            color={(status === 'banned' && 'error') || 'success'}\n                          >\n                            {sentenceCase(status)}\n                          </Label>\n                        </TableCell>\n\n                        <TableCell align=\"right\">\n                          <UserMoreMenu onDelete={() => handleDeleteUser(id)} userName={name} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={userList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}